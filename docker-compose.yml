version: '3.8'

services:
  nginx-rtmp:
    build:
      context: ./nginx-rtmp
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${RTMP_PORT:-1936}:1935"
      - "${HTTP_STATS_PORT:-8080}:8080"
    networks:
      - relayer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/rtmp_stat"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  ffmpeg-relay:
    build:
      context: ./ffmpeg-relay
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - KICK_URL=${KICK_URL}
      - KICK_KEY=${KICK_KEY}
      - RTMP_APP=${RTMP_APP:-live}
      - RTMP_STREAM_NAME=${RTMP_STREAM_NAME:-mystream}
      - OUT_RES=${OUT_RES:-1080}
      - OUT_FPS=${OUT_FPS:-30}
      - VID_BITRATE=${VID_BITRATE:-3000k}
      - MAX_BITRATE=${MAX_BITRATE:-3500k}
      - BUFFER_SIZE=${BUFFER_SIZE:-12000k}
      - AUDIO_BITRATE=${AUDIO_BITRATE:-128k}
      - AUDIO_SAMPLERATE=${AUDIO_SAMPLERATE:-48000}
    volumes:
      - ${OFFLINE_VIDEO_PATH}:/opt/offline.mp4:ro
      - ${LOG_DIR:-./logs}:/var/log/relayer
    networks:
      - relayer-network
    depends_on:
      nginx-rtmp:
        condition: service_healthy

  supervisor:
    build:
      context: ./supervisor
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - RTMP_APP=${RTMP_APP:-live}
      - RTMP_STREAM_NAME=${RTMP_STREAM_NAME:-mystream}
      - POLL_INTERVAL=${POLL_INTERVAL:-1}
      - KILL_GRACE=${KILL_GRACE:-3}
      - CRASH_BACKOFF=${CRASH_BACKOFF:-2}
    volumes:
      - ${LOG_DIR:-./logs}:/var/log/relayer
    networks:
      - relayer-network
    depends_on:
      - nginx-rtmp
      - ffmpeg-relay

networks:
  relayer-network:
    driver: bridge